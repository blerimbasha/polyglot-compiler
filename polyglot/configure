#!/bin/sh

trap 'rm -f PrintProperty.java PrintProperty.class' EXIT

find_in_path() {
    #type "$1" 2>&1 | grep -v 'not found' | sed 's/.* is //' | awk '{print $0}'
    OLD_IFS="${IFS}"
    IFS=':'
    (for i in ${PATH} ; do
        if command test -f $i/$1 && command test -x $i/$1 ; then
            echo $i/$1 ;
        fi ;
    done) | head -1
    IFS="${OLD_IFS}"
}

exists() {
    if [ ! "$1" "$2" ]; then
	echo "** Error: $2 not found"
	exit 1
    fi
}

escape() {
    sed -e 's%\\%\\\\%g' -e 's%;%\\;%g' | sed 's%%%g'
}

JAVAC=`find_in_path javac`

if [ -z "${JAVAC}" ]; then
    echo javac not found
    exit 1
fi

exists -x "${JAVAC}"
echo javac is "${JAVAC}"

tmp=`dirname "${JAVAC}"`
JAVA_HOME=`dirname "$tmp"`
exists -d "${JAVA_HOME}"
echo Java home directory is "${JAVA_HOME}"

JAVA="${JAVA_HOME}/bin/java"
exists -x "${JAVA}"
echo java is "${JAVA}"

JAVAH="${JAVA_HOME}/bin/javah"
exists -x "${JAVAH}"
echo javah is "${JAVAH}"

RMIC="${JAVA_HOME}/bin/rmic"
exists -x "${RMIC}"
echo rmic is "${RMIC}"

JAVADOC="${JAVA_HOME}/bin/javadoc"
exists -x "${JAVADOC}"
echo javadoc is "${JAVADOC}"

JAR="${JAVA_HOME}/bin/jar"
exists -x "${JAR}"
echo jar is "${JAR}"

TOOLS_JAR="${JAVA_HOME}/lib/tools.jar"
exists -f "${TOOLS_JAR}"
echo tools.jar is "${TOOLS_JAR}"

RT_JAR="${JAVA_HOME}/jre/lib/rt.jar"
exists -f "${RT_JAR}"
echo rt.jar is "${RT_JAR}"

exists -f ./java_cup.jar
echo java_cup.jar is ./java_cup.jar

exists -f ./iDoclet.jar
echo iDoclet.jar is ./iDoclet.jar

echo determining some Java properties:

cat > PrintProperty.java <<EOF
public class PrintProperty {
    public static void main(String[] args) {
	if (args.length == 1) System.out.println(System.getProperty(args[0]));
    }
}
EOF

exists -f PrintProperty.java

"${JAVAC}" PrintProperty.java
exists -f PrintProperty.class

PATH_SEP=`"${JAVA}" -cp . PrintProperty path.separator | escape`
echo path separator is ${PATH_SEP}

FILE_SEP=`"${JAVA}" -cp . PrintProperty file.separator | escape`
echo file separator is ${FILE_SEP}

CWD=`"${JAVA}" -cp . PrintProperty user.dir | escape`
echo current directory is ${CWD}

ESC_JAVA_HOME=`"${JAVA}" -cp . PrintProperty java.home | escape`
if [ -f "${ESC_JAVA_HOME}${FILE_SEP}lib${FILE_SEP}rt.jar" ]; then
    ESC_JAVA_HOME="${ESC_JAVA_HOME}${FILE_SEP}.." # %%${FILE_SEP}jre}
fi
echo escaped Java home directory is "${ESC_JAVA_HOME}"

if [ -d ${JAVA_HOME}/include/win32 ]
then
    OS=win32
elif [ -d ${JAVA_HOME}/include/linux ]
then
    OS=linux
elif [ -d ${JAVA_HOME}/include/solaris ]
then
    OS=solaris
else
    echo Cannot determine operating system.
    exit 1
fi

echo Operating system is ${OS}.

# ESC_TOOLS_JAR="${ESC_JAVA_HOME}${FILE_SEP}lib${FILE_SEP}tools.jar"
# echo escaped tools.jar is "${ESC_TOOLS_JAR}"

TOP=$CWD
echo "Top of build tree is $TOP"

echo creating Defs.mk

cat > Defs.mk << EOF
# DO NOT EDIT - This file was automatically generated by configure.

ESC_SOURCE = \$(subst /,${FILE_SEP},\$(SOURCE))
ESC_BUILDPATH = \$(subst /,${FILE_SEP},\$(BUILDPATH))

JAVA_HOME = ${JAVA_HOME}

JC = ${JAVAC}
JAVA = ${JAVA}
JAVAH = ${JAVAH}
RMIC = ${RMIC}
JAVADOC = ${JAVADOC}

OS = ${OS}

TOOLS_JAR = ${TOOLS_JAR}
RT_JAR = ${RT_JAR}

JSSE_JAR = \$(ESC_SOURCE)${FILE_SEP}jsse.jar
JNET_JAR = \$(ESC_SOURCE)${FILE_SEP}jnet.jar
JCERT_JAR = \$(ESC_SOURCE)${FILE_SEP}jcert.jar
CRYPTIX_JAR = \$(ESC_SOURCE)${FILE_SEP}cryptix32.jar
IDOCLET_JAR = \$(ESC_SOURCE)${FILE_SEP}iDoclet.jar

CRYPT_PATH = \$(JSSE_JAR)${PATH_SEP}\$(JNET_JAR)${PATH_SEP}\$(JCERT_JAR)${PATH_SEP}\$(CRYPTIX_JAR)

OUTPUT = \$(ESC_SOURCE)${FILE_SEP}classes

LEX_RUNTIME = \$(ESC_SOURCE)${FILE_SEP}jlex.jar
CUP_RUNTIME = \$(ESC_SOURCE)${FILE_SEP}java_cup.jar
CLASSPATH = \$(OUTPUT)${PATH_SEP}\$(CUP_RUNTIME)${PATH_SEP}\$(LEX_RUNTIME)${PATH_SEP}\$(CRYPT_PATH)${PATH_SEP}\$(RT_JAR)${PATH_SEP}\$(TOOLS_JAR)
JAVAC_PATHS = -classpath \$(CLASSPATH) -sourcepath \$(ESC_BUILDPATH)${PATH_SEP}\$(ESC_SOURCE)

JAVADOC_CLASSPATH = \$(IDOCLET_JAR)${PATH_SEP}\$(CLASSPATH)
EOF

exists -f Defs.mk

echo creating jlc

R="\${JAVA} -classpath \${TOP}${FILE_SEP}classes${PATH_SEP}\${TOP}${FILE_SEP}java_cup.jar${PATH_SEP}\${CLASSPATH} jltools.main.Main \$@"

cat > jlc <<EOF
#!/bin/sh
# DO NOT EDIT - This file was automatically generated by configure.

case "\$1" in
  -v) verbose=1; shift;;
esac

JAVA='${JAVA}'
FILE_SEP='${FILE_SEP}'
PATH_SEP='${PATH_SEP}'
TOP='${TOP}'

if test -n \$verbose
then
  echo $R
fi

$R
EOF

exists -f jlc
chmod a+x ./jlc

echo done
