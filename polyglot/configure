#!/bin/sh

trap 'rm -f PrintProperty.java PrintProperty.class' EXIT

find_in_path() {
    type "$1" 2>&1 | grep -v 'not found' | sed 's/.* is //' | awk '{print $0}'
}

exists() {
    if [ ! "$1" "$2" ]; then
	echo $2 not found
	exit 1
    fi
}

escape() {
    sed -e 's%\\%\\\\%g' -e 's%;%\\;%g' | sed 's%%%g'
}

JAVAC=`find_in_path javac`

if [ -z "${JAVAC}" ]; then
    echo javac not found
    exit 1
fi

exists -x "${JAVAC}"
echo javac is "${JAVAC}"

tmp=`dirname "${JAVAC}"`
JAVA_HOME=`dirname "$tmp"`
exists -d "${JAVA_HOME}"
echo Java home directory is "${JAVA_HOME}"

JAVA="${JAVA_HOME}/bin/java"
exists -x "${JAVA}"
echo java is "${JAVA}"

JAVADOC="${JAVA_HOME}/bin/javadoc"
exists -x "${JAVADOC}"
echo javadoc is "${JAVADOC}"

JAR="${JAVA_HOME}/bin/jar"
exists -x "${JAR}"
echo jar is "${JAR}"

TOOLS_JAR="${JAVA_HOME}/lib/tools.jar"
exists -f "${TOOLS_JAR}"
echo tools.jar is "${TOOLS_JAR}"

RT_JAR="${JAVA_HOME}/jre/lib/rt.jar"
exists -f "${RT_JAR}"
echo rt.jar is "${RT_JAR}"

exists -f ./java_cup.jar
echo java_cup.jar is ./java_cup.jar

exists -f ./iDoclet.jar
echo iDoclet.jar is ./iDoclet.jar

echo determining some Java properties:

cat > PrintProperty.java <<EOF
public class PrintProperty {
    public static void main(String[] args) {
	if (args.length == 1) System.out.println(System.getProperty(args[0]));
    }
}
EOF

exists -f PrintProperty.java

"${JAVAC}" PrintProperty.java
exists -f PrintProperty.class

PATH_SEP=`"${JAVA}" -cp . PrintProperty path.separator | escape`
echo path separator is ${PATH_SEP}

FILE_SEP=`"${JAVA}" -cp . PrintProperty file.separator | escape`
echo file separator is ${FILE_SEP}

ESC_JAVA_HOME=`"${JAVA}" -cp . PrintProperty java.home | escape`
if [ -f "${ESC_JAVA_HOME}${FILE_SEP}lib${FILE_SEP}rt.jar" ]; then
    ESC_JAVA_HOME="${ESC_JAVA_HOME}${FILE_SEP}.." # %%${FILE_SEP}jre}
fi
echo escaped Java home directory is "${ESC_JAVA_HOME}"


ESC_TOOLS_JAR="${ESC_JAVA_HOME}${FILE_SEP}lib${FILE_SEP}tools.jar"
echo escaped tools.jar is "${ESC_TOOLS_JAR}"

TOP=`echo $0 | sed -e 's@[^'${FILE_SEP}']*$@@' -e 's@'${FILE_SEP}'$@@' `
if test -z "$TOP" || test "$TOP"
then
    TOP=`pwd`
fi
echo "Top of build tree is $TOP"


echo creating Defs.mk

(
    echo "# DO NOT EDIT - This file was automatically generated by configure."
    echo
    echo ESC_SOURCE = '$(subst /,'${FILE_SEP}',$(SOURCE))'
    echo ESC_BUILDPATH = '$(subst /,'${FILE_SEP}',$(BUILDPATH))'
    echo
    echo JAVA_HOME = "${JAVA_HOME}"
    echo
    echo JC = "${JAVAC}"
    echo JAVA = "${JAVA}"
    echo JAVADOC = "${JAVADOC}"
    echo JAR = "${JAR}"
    echo
    echo TOOLS_JAR = "${TOOLS_JAR}"
    echo RT_JAR = "${RT_JAR}"
    echo
    echo CUP_RUNTIME = '$(ESC_SOURCE)'${FILE_SEP}'java_cup.jar'
    echo CLASSPATH = '$(ESC_SOURCE)'${FILE_SEP}classes${PATH_SEP}'$(CUP_RUNTIME)'
    echo JAVAC_PATHS = -classpath '$(CLASSPATH)' -sourcepath '$(ESC_BUILDPATH):$(ESC_SOURCE)'
    echo
    echo JAVADOC_CLASSPATH = '$(ESC_SOURCE)'${FILE_SEP}'iDoclet.jar'"${PATH_SEP}${ESC_TOOLS_JAR}${PATH_SEP}"'$(CLASSPATH)'
) > Defs.mk

exists -f Defs.mk

echo creating jlc

(
    echo "#! /bin/sh"
    echo "# DO NOT EDIT - This file was automatically generated by configure."
    echo
    echo 'case "$1" in'
    echo '  -v) verbose=1; shift;;'
    echo 'esac'
    echo "JAVA=\"${JAVA}\""
    echo "FILE_SEP=\"${FILE_SEP}\""
    echo "PATH_SEP=\"${PATH_SEP}\""
    echo "TOP=\"${TOP}\""
    echo 
    echo 'if test -n "$verbose"'
    echo 'then'
	echo 'echo ${JAVA} -classpath ${TOP}${FILE_SEP}classes${PATH_SEP}${TOP}${FILE_SEP}java_cup.jar${PATH_SEP}${CLASSPATH} jltools.main.Main $@'
    echo 'fi'
    echo '${JAVA} -classpath ${TOP}${FILE_SEP}classes${PATH_SEP}${TOP}${FILE_SEP}java_cup.jar${PATH_SEP}${CLASSPATH} jltools.main.Main $@'
) > jlc

exists -f jlc
chmod a+x ./jlc

echo done
